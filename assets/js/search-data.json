{
  
    
        "post0": {
            "title": "Pitching Record",
            "content": "Pitcher’s Win-Loss Record Has to Go . By Walker Dickey . With the MLB season looming and the Astros dominating the headlines, there is something else the league must consider. It is time to let go of the pitcher’s win-loss record. It’s irrelevant, an outdated stat, and carries no real value to determine how good a pitcher actually is. There’s not just one thing that makes it a bad stat, rather a combination of rules and regulations that make it a stat that simply doesn’t matter. . The first rule that baffles me is how starting pitchers have different rules to get a win than relievers do. In order to qualify for a win, a starting pitcher must pitch at least five innings. On the other hand, relievers often only have to get one out. For example, if a starter has gone through 4 ⅔ perfect innings with a lead and has to come out of the game due to injury, he does not qualify for the win, even though he dominated over half the game. The reliever, having worked harder in the bullpen than in the live game, would most likely “earn” the win. By rule, all he would have to do is not give up two runs. If his team maintained its lead, he would be credited with the win, even if he was pulled after getting just a single out. The rule states the official scorer “generally should, but is not required to,” consider the reliever’s outing “ineffective and brief” if the reliever pitches less than one inning and allows two or more earned runs. This mess tries, but fails, to make the stat better. The starter is still cheated out of the win, and the stat is still useless. . On top of that, relievers can actually be rewarded with wins for giving up runs, which kind of defeats the purpose of the stat, but it happens frequently. In fact, I was at a game last year where the home team was leading 3-1 heading into the ninth inning. Just like any other team would do, they brought in their closer. Said closer gave up a two run home run to tie the game. His team then went on to walk off in the bottom half of the inning. As I was leaving my seat, I heard the PA announcer say that the closer was the winning pitcher. All he did while he was in the game was put his team in a worse position to win than they were in when he entered the game, but because the stat is tremendously flawed to say the least, he was rewarded with the win. . In the 2018 MLB season, Jacob Degrom and Max Scherzer were battling it out for the NL Cy Young award. However, the fact that it was even a discussion was absurd. Granted, Scherzer had an outstanding season, but Degrom’s was better, and it wasn’t particularly close. Over the course of that season, Scherzer was 18-7, gave up 62 earned runs, and had an ERA of 2.53, which again, is extraordinary. However, isn’t the main job of a pitcher to not give up runs? Well, on that measure, Degrom was much better, 32% better in fact. He gave up just 41 earned runs for an ERA of 1.70. However, his record was just 10-9. It shouldn’t have even been a discussion. It should have been Degrom’s award, no question, no debate. But his lack of wins left the award up for grabs. Degrom’s record ended up being above .500, but for much of that season, he was either at that mark or below. The whole time there was debate about whether Degrom should get the award with a record below .500, and many people said no. Obviously, Degrom won the award by a wide margin, but I am left to wonder if his record had finished at or below .500, would he still have won? Had that happened, and Scherzer won, it would have been a robbery, and the pitcher’s win-loss record the thief. . The fact is the pitcher’s win-loss record is just behind the times. It was a stat that was more suitable for a time when pitchers were throwing complete games, but that just doesn’t happen much anymore. In an MLB season, 2,430 combined games are played across all 30 teams. In the 2019 season, 45 complete games were thrown. That is only in about 1.9% of the games. It’s not a pitcher’s job to score runs for his team, but since pitchers are throwing fewer innings now, their personal records rely too much on the team around them to be an effective stat. . Now you’re probably wondering if you do away with the win-loss record for pitchers, what do you replace it with? Well, it doesn’t need replacing. It’s not needed to determine which team won the game, or to show how good a pitcher is. Plenty of other stats do a substantially better job of that. There’s more than just ERA. There’s WHIP, which measures how many people the pitcher lets on base per inning, FIP, which determines how lucky or unlucky pitchers get, ERA+, which adjusts for ballparks and opponents to determine how much better or worse the pitcher is than league average, and numerous other stats, all of which do a better job of telling a pitcher’s story than their personal record does. . The bottom line is the pitcher’s win-loss record is a stat that does not belong in today’s MLB. It is a poor stat that provides no information about how good a pitcher actually is. Worse yet, it obstructs people’s views, leading them to believe some pitchers are better than others for no good reason. It is time the MLB moves away from the pitcher’s win-loss record. It did good work while it lasted, but in today’s game, it’s irrelevant and confusing. We have much better ways to gauge the quality of a pitcher. Continuing to use the win-loss stat makes about as much sense as still using VHS tapes. Let it go people. The win-loss record no longer does the job. .",
            "url": "https://sports-imo.github.io/blog/2020/03/03/pitching-record.html",
            "relUrl": "/2020/03/03/pitching-record.html",
            "date": " • Mar 3, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Pitcher's Win-Loss Record Has to Go",
            "content": "With the MLB season looming and the Astros dominating the headlines, there is something else the league must consider. It is time to let go of the pitcher’s win-loss record. It’s irrelevant, an outdated stat, and carries no real value to determine how good a pitcher actually is. There’s not just one thing that makes it a bad stat, rather a combination of rules and regulations that make it a stat that simply doesn’t matter. . The first rule that baffles me is how starting pitchers have different rules to get a win than relievers do. In order to qualify for a win, a starting pitcher must pitch at least five innings. On the other hand, relievers often only have to get one out. For example, if a starter has gone through 4 ⅔ perfect innings with a lead and has to come out of the game due to injury, he does not qualify for the win, even though he dominated over half the game. The reliever, having worked harder in the bullpen than in the live game, would most likely “earn” the win. By rule, all he would have to do is not give up two runs. If his team maintained its lead, he would be credited with the win, even if he was pulled after getting just a single out. The rule states the official scorer “generally should, but is not required to,” consider the reliever’s outing “ineffective and brief” if the reliever pitches less than one inning and allows two or more earned runs. This mess tries, but fails, to make the stat better. The starter is still cheated out of the win, and the stat is still useless. . On top of that, relievers can actually be rewarded with wins for giving up runs, which kind of defeats the purpose of the stat, but it happens frequently. In fact, I was at a game last year where the home team was leading 3-1 heading into the ninth inning. Just like any other team would do, they brought in their closer. Said closer gave up a two run home run to tie the game. His team then went on to walk off in the bottom half of the inning. As I was leaving my seat, I heard the PA announcer say that the closer was the winning pitcher. All he did while he was in the game was put his team in a worse position to win than they were in when he entered the game, but because the stat is tremendously flawed to say the least, he was rewarded with the win. . In the 2018 MLB season, Jacob Degrom and Max Scherzer were battling it out for the NL Cy Young award. However, the fact that it was even a discussion was absurd. Granted, Scherzer had an outstanding season, but Degrom’s was better, and it wasn’t particularly close. Over the course of that season, Scherzer was 18-7, gave up 62 earned runs, and had an ERA of 2.53, which again, is extraordinary. However, isn’t the main job of a pitcher to not give up runs? Well, on that measure, Degrom was much better, 32% better in fact. He gave up just 41 earned runs for an ERA of 1.70. However, his record was just 10-9. It shouldn’t have even been a discussion. It should have been Degrom’s award, no question, no debate. But his lack of wins left the award up for grabs. Degrom’s record ended up being above .500, but for much of that season, he was either at that mark or below. The whole time there was debate about whether Degrom should get the award with a record below .500, and many people said no. Obviously, Degrom won the award by a wide margin, but I am left to wonder if his record had finished at or below .500, would he still have won? Had that happened, and Scherzer won, it would have been a robbery, and the pitcher’s win-loss record the thief. . The fact is the pitcher’s win-loss record is just behind the times. It was a stat that was more suitable for a time when pitchers were throwing complete games, but that just doesn’t happen much anymore. In an MLB season, 2,430 combined games are played across all 30 teams. In the 2019 season, 45 complete games were thrown. That is only in about 1.9% of the games. It’s not a pitcher’s job to score runs for his team, but since pitchers are throwing fewer innings now, their personal records rely too much on the team around them to be an effective stat. . Now you’re probably wondering if you do away with the win-loss record for pitchers, what do you replace it with? Well, it doesn’t need replacing. It’s not needed to determine which team won the game, or to show how good a pitcher is. Plenty of other stats do a substantially better job of that. There’s more than just ERA. There’s WHIP, which measures how many people the pitcher lets on base per inning, FIP, which determines how lucky or unlucky pitchers get, ERA+, which adjusts for ballparks and opponents to determine how much better or worse the pitcher is than league average, and numerous other stats, all of which do a better job of telling a pitcher’s story than their personal record does. . The bottom line is the pitcher’s win-loss record is a stat that does not belong in today’s MLB. It is a poor stat that provides no information about how good a pitcher actually is. Worse yet, it obstructs people’s views, leading them to believe some pitchers are better than others for no good reason. It is time the MLB moves away from the pitcher’s win-loss record. It did good work while it lasted, but in today’s game, it’s irrelevant and confusing. We have much better ways to gauge the quality of a pitcher. Continuing to use the win-loss stat makes about as much sense as still using VHS tapes. Let it go people. The win-loss record no longer does the job. .",
            "url": "https://sports-imo.github.io/blog/baseball/pitching/sports/stats/rules/2020/03/03/Pitching-Record.html",
            "relUrl": "/baseball/pitching/sports/stats/rules/2020/03/03/Pitching-Record.html",
            "date": " • Mar 3, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . Front Matter is a markdown cell at the beginning of your notebook that allows you to inject metadata into your notebook. For example: . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks just like you can with markdown. . For example, here is a footnote 1. . . This is the footnote.&#8617; . |",
            "url": "https://sports-imo.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "A new blog about all things sports .",
          "url": "https://sports-imo.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}